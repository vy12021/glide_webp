apply plugin: 'com.android.library'

dependencies {
    implementation "androidx.annotation:annotation:${ANDROID_X_VERSION}"

    testImplementation project(':testutil')
    testImplementation "androidx.annotation:annotation:${ANDROID_X_VERSION}"
    testImplementation "com.google.truth:truth:${TRUTH_VERSION}"
    testImplementation "junit:junit:${JUNIT_VERSION}"
    testImplementation "org.mockito:mockito-core:${MOCKITO_VERSION}"
    testImplementation "org.robolectric:robolectric:${ROBOLECTRIC_VERSION}"
}

android {
    compileSdkVersion COMPILE_SDK_VERSION as int

    defaultConfig {
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }

        // to your CMake build script.
        externalNativeBuild {
            cmake {
                // Use the following syntax when passing arguments to variables:
                // arguments "-DVAR_NAME=ARGUMENT".
                arguments "-DANDROID_ARM_NEON=TRUE",
                        "-DANDROID_TOOLCHAIN=clang",
                        "-DANDROID_PLATFORM=android-19",
                        "-DANDROID_NATIVE_API_LEVEL=19",
                        // "-DANDROID_STL=gnustl_static",
                        "-DLIBCXX_FORCE_REBUILD=TRUE",
                        // "-DANDROID_ABI=armeabi-v7a",
                        // "-G=Android Gradle - Ninja",
                        // "-DANDROID_NDK=",
                        // "-DCMAKE_LIBRARY_OUTPUT_DIRECTORY=",
                        "-DCMAKE_BUILD_TYPE=Release",
                        // "-DCMAKE_MAKE_PROGRAM=ninja",
                        // "-DCMAKE_TOOLCHAIN_FILE=path",
                        "-DANDROID_CPP_FEATURES=rtti exceptions"
            }
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs', 'src/main/cpp/output']
            jni.srcDirs = ['src/main/cpp']
        }
    }

    externalNativeBuild {
        cmake {
            path 'src/main/cpp/CMakeLists.txt'
        }
    }
}

apply from: "${rootProject.projectDir}/scripts/upload.gradle"
